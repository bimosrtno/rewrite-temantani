openapi: 3.0.0
info:
  title: API SPEC Teman Tani
  description: API untuk mengelola data Teman Tani
  version: 1.0.0

servers:
  - url: http://localhost:5000/api
    description: Development Server

tags:
  - name: Customers
    description: API untuk mengelola customer
  - name: Products
    description: API untuk mengelola produk
  - name: Stockin
    description: API untuk mengelola stok produk
  - name: Sales
    description: API untuk mengelola transaksi penjualan

paths:
  /customers:
    get:
      tags:
        - Customers
      summary: Get All Customers
      description: Mengambil semua customer dari database
      responses:
        200:
          description: List of all customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customers retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
        500:
          description: Internal Server Error

    post:
      tags:
        - Customers
      summary: Add New Customer
      description: Menambahkan customer baru dengan ID otomatis dan status default "Potensial"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerInput"
      responses:
        201:
          description: Customer added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer added successfully"
                  data:
                    $ref: "#/components/schemas/Customer"
        400:
          description: All required fields must be provided
        500:
          description: Internal Server Error

  /customers/{customer_id}/status:
    put:
      tags:
        - Customers
      summary: Update Customer Status
      description: Mengubah status customer berdasarkan customer_id
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
          example: "CUST001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "Aktif"
      responses:
        200:
          description: Status updated successfully
        400:
          description: Status field is required
        404:
          description: Customer not found
        500:
          description: Internal Server Error

  /products:
    get:
      tags:
        - Products
      summary: Get All Products
      description: Mengambil semua produk dari database
      responses:
        200:
          description: List of all products
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Products retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        500:
          description: Internal Server Error

    post:
      tags:
        - Products
      summary: Add New Product
      description: Menambahkan produk baru ke database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        201:
          description: Product added successfully
        400:
          description: All required fields must be provided
        500:
          description: Internal Server Error

  /stockin:
    get:
      tags:
        - Stockin
      summary: Get All Stockin Records
      description: Mengambil semua data stok masuk
      responses:
        200:
          description: List of all stockin records
        500:
          description: Internal Server Error

    post:
      tags:
        - Stockin
      summary: Add New Stock Entry
      description: Menambahkan stok baru untuk produk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockinInput"
      responses:
        201:
          description: Stock added successfully
        400:
          description: Missing required fields
        500:
          description: Internal Server Error

  /sales:
    get:
      tags:
        - Sales
      summary: Get All Sales Transactions
      description: Mengambil semua transaksi penjualan dari database
      responses:
        200:
          description: List of all sales transactions
        500:
          description: Internal Server Error

    post:
      tags:
        - Sales
      summary: Create a New Sales Transaction
      description: Menambahkan transaksi penjualan baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesInput"
      responses:
        201:
          description: Sales transaction created successfully
        400:
          description: Missing required fields or insufficient stock
        500:
          description: Internal Server Error

components:
  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: string
          example: "CUST001"
        name:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "081234567890"
        email:
          type: string
          example: "john@example.com"
        domisili:
          type: string
          example: "Jakarta"
        status:
          type: string
          example: "Potensial"

    CustomerInput:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        domisili:
          type: string

    Product:
      type: object
      properties:
        product_id:
          type: string
          example: "PPK004"
        category:
          type: string
        product_name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
        image:
          type: string

    ProductInput:
      type: object
      properties:
        category:
          type: string
        product_name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
        image:
          type: string

    Stockin:
      type: object
      properties:
        stockin_id:
          type: string
        product_id:
          type: string
        stock:
          type: integer
        date:
          type: string
          format: date-time

    StockinInput:
      type: object
      properties:
        product_id:
          type: string
        stock:
          type: integer

    Sales:
      type: object
      properties:
        transaction_id:
          type: string
        customer_id:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        total_price:
          type: number
        date:
          type: string
          format: date-time
        status:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer

    SalesInput:
      type: object
      properties:
        customer_id:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        status:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
              product_name:
                type: string
              quantity:
                type: integer
