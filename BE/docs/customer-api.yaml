openapi: 3.0.0
info:
  title: Customer API
  description: API untuk mengelola data customer
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/customers
    description: Development Server

paths:
  /:
    get:
      summary: Get All Customers
      description: Mengambil semua customer dari database
      responses:
        200:
          description: List of all customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customers retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
        500:
          description: Internal Server Error

    post:
      summary: Add New Customer
      description: Menambahkan customer baru dengan ID otomatis dan status default "Potensial"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                phone:
                  type: string
                  example: "081234567890"
                email:
                  type: string
                  example: "john@example.com"
                domisili:
                  type: string
                  example: "Jakarta"
      responses:
        201:
          description: Customer added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer added successfully"
                  data:
                    $ref: "#/components/schemas/Customer"
        400:
          description: All required fields must be provided
        500:
          description: Internal Server Error

  /{customer_id}/status:
    put:
      summary: Update Customer Status
      description: Mengubah status customer berdasarkan customer_id
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
          example: "CUST001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "Aktif"
      responses:
        200:
          description: Status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer status updated successfully"
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        example: "CUST001"
                      status:
                        type: string
                        example: "Aktif"
        400:
          description: Status field is required
        404:
          description: Customer not found
        500:
          description: Internal Server Error

  /{customer_id}/phone:
    put:
      summary: Update Customer Phone
      description: Mengubah nomor telepon customer berdasarkan customer_id
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
          example: "CUST001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "081234567891"
      responses:
        200:
          description: Phone number updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Customer phone updated successfully"
                  data:
                    type: object
                    properties:
                      customer_id:
                        type: string
                        example: "CUST001"
                      phone:
                        type: string
                        example: "081234567891"
        400:
          description: Phone number is required
        404:
          description: Customer not found
        500:
          description: Internal Server Error

components:
  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: string
          example: "CUST001"
        name:
          type: string
          example: "John Doe"
        phone:
          type: string
          example: "081234567890"
        email:
          type: string
          example: "john@example.com"
        domisili:
          type: string
          example: "Jakarta"
        status:
          type: string
          example: "Potensial"
